{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hjohnston\\\\OneDrive - Neumont College of Computer Science\\\\Documents\\\\GitHub\\\\WhendigoOccurances\\\\Capstone\\\\react-whendigo-app\\\\src\\\\Pages\\\\Posts.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Nav from \"./Nav\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Posts = () => {\n  _s();\n  const [items, setPosts] = useState([]);\n  const userId = sessionStorage.getItem('userId');\n  const [comment, setComment] = useState(\"\");\n  const [user, setUser] = useState(null);\n  const [commentsMap, setCommentsMap] = useState({});\n  useEffect(() => {\n    console.log(items);\n  }, [items]);\n  useEffect(() => {\n    const fetchUser = async () => {\n      try {\n        const response = await fetch(`http://localhost:3666/user/${userId}`);\n        const userData = await response.json();\n        setUser(userData);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    if (userId) {\n      fetchUser();\n    }\n  }, [userId]);\n  useEffect(() => {\n    fetch(\"http://localhost:3666/post\").then(response => {\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch posts\");\n      }\n      return response.json();\n    }).then(data => {\n      const postsWithArrays = data.map(item => ({\n        ...item,\n        likes: item.likes || [],\n        dislikes: item.dislikes || []\n      }));\n      setPosts(postsWithArrays);\n    }).catch(error => {\n      console.error(error);\n    });\n  }, []);\n  useEffect(() => {\n    const fetchCommentsForPosts = async () => {\n      try {\n        const updatedCommentsMap = {};\n        await Promise.all(items.map(async item => {\n          const response = await fetch(`http://localhost:3666/post/${item._id}/comments`);\n          const commentsData = await response.json();\n          updatedCommentsMap[item._id] = commentsData;\n        }));\n        setCommentsMap(updatedCommentsMap);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchCommentsForPosts();\n  }, [items]);\n  const handleLike = (postId, likeStatus) => {\n    if (!userId) {\n      alert(\"Please log in to like posts.\");\n      return;\n    }\n    let newStatus;\n    if (likeStatus === \"liked\") {\n      newStatus = \"unlike\";\n    } else {\n      newStatus = \"like\";\n    }\n    fetch(`http://localhost:3666/post/${postId}/like`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        userId\n      })\n    }).then(response => response.json()).then(data => {\n      if (data.success) {\n        const updatedPosts = items.map(post => {\n          if (post.id === postId) {\n            console.log(postId);\n            return {\n              ...post,\n              likeStatus: newStatus\n            };\n          }\n          return post;\n        });\n        setPosts(updatedPosts);\n      } else {\n        console.error(data.error);\n      }\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n  const handleDislike = (postId, likeStatus) => {\n    if (!userId) {\n      alert(\"Please log in to dislike posts.\");\n      return;\n    }\n    let newStatus;\n    if (likeStatus === \"disliked\") {\n      newStatus = \"undislike\";\n    } else {\n      newStatus = \"dislike\";\n    }\n    fetch(`http://localhost:3666/post/${postId}/dislike`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        userId\n      })\n    }).then(response => response.json()).then(data => {\n      if (data.success) {\n        const updatedPosts = items.map(post => {\n          if (post.id === postId) {\n            return {\n              ...post,\n              likeStatus: newStatus\n            };\n          }\n          return post;\n        });\n        setPosts(updatedPosts);\n      } else {\n        console.error(data.error);\n      }\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n  const handleBookmark = (postId, bookmarkedStatus) => {\n    if (!userId) {\n      alert(\"Please log in to bookmark posts.\");\n      return;\n    }\n    const updatedPosts = items.map(post => {\n      if (post._id === postId) {\n        return {\n          ...post,\n          bookmarked: bookmarkedStatus\n        };\n      }\n      return post;\n    });\n    setPosts(updatedPosts);\n    fetch(`http://localhost:3666/post/${postId}/bookmark`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        userId,\n        bookmarked: bookmarkedStatus\n      })\n    }).then(response => response.json()).then(data => {\n      if (!data.success) {\n        console.error(\"Failed to toggle bookmark:\", data.error);\n        const revertedPosts = items.map(post => {\n          if (post._id === postId) {\n            return {\n              ...post,\n              bookmarked: !bookmarkedStatus\n            };\n          }\n          return post;\n        });\n        setPosts(revertedPosts);\n      }\n    }).catch(error => {\n      console.error(\"Error while toggling bookmark:\", error);\n      const revertedPosts = items.map(post => {\n        if (post._id === postId) {\n          return {\n            ...post,\n            bookmarked: !bookmarkedStatus\n          };\n        }\n        return post;\n      });\n      setPosts(revertedPosts);\n    });\n  };\n  const handleComment = async postId => {\n    if (!userId) {\n      alert(\"Please log in to comment.\");\n      return;\n    }\n    try {\n      const response = await fetch(`http://localhost:3666/post/${postId}/comment`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          userId,\n          userName: user.UserName,\n          text: comment,\n          postId\n        })\n      });\n      const data = await response.json();\n      if (data.success) {\n        const updatedPosts = items.map(post => {\n          if (post._id === postId) {\n            const updatedComments = [...post.comments, {\n              userId,\n              userName: user.UserName,\n              text: comment\n            }];\n            return {\n              ...post,\n              comments: updatedComments\n            };\n          }\n          return post;\n        });\n        setPosts(updatedPosts);\n        setComment(\"\");\n      } else {\n        console.error(data.error);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ContentBox\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spacer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"right\",\n        children: \"Post Feed:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spacer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this), items.map(item => {\n        console.log(\"Comments:\", item.comments);\n        const likeStatus = item.likes.includes(userId) ? \"liked\" : item.dislikes.includes(userId) ? \"disliked\" : null;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"PostBox\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: item.postDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: item.postImg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: item.postBody\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Likes: \", item.likes.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Dislikes: \", item.dislikes.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 15\n          }, this), userId && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleLike(item._id, likeStatus),\n              disabled: !userId,\n              children: likeStatus === \"liked\" ? \"Unlike\" : \"Like\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDislike(item._id, likeStatus),\n              disabled: !userId,\n              children: likeStatus === \"disliked\" ? \"Undislike\" : \"Dislike\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true), userId && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleBookmark(item._id, item.bookmarked),\n            disabled: !userId,\n            children: item.bookmarked ? \"Bookmarked\" : \"Bookmark\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Write a comment...\",\n            value: comment,\n            onChange: e => setComment(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleComment(item._id, user.UserName),\n            disabled: !userId,\n            children: \"Add Comment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Comments\",\n            children: commentsMap[item._id] && commentsMap[item._id].length > 0 ? commentsMap[item._id].map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"Comment\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: comment.userId === userId ? /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: `/userProfile`,\n                    children: comment.userName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 290,\n                    columnNumber: 25\n                  }, this) : /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: `/user/${comment.userId}`,\n                    children: comment.userName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 292,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 288,\n                  columnNumber: 21\n                }, this), \": \", comment.text]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 19\n              }, this)\n            }, comment._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 17\n            }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"No comments yet.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 13\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spacer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 237,\n    columnNumber: 5\n  }, this);\n};\n_s(Posts, \"NkSPzapxM3rB5jv9DTy9W7u1f4c=\");\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","useEffect","useState","Nav","jsxDEV","_jsxDEV","Fragment","_Fragment","Posts","_s","items","setPosts","userId","sessionStorage","getItem","comment","setComment","user","setUser","commentsMap","setCommentsMap","console","log","fetchUser","response","fetch","userData","json","error","then","ok","Error","data","postsWithArrays","map","item","likes","dislikes","catch","fetchCommentsForPosts","updatedCommentsMap","Promise","all","_id","commentsData","handleLike","postId","likeStatus","alert","newStatus","method","headers","body","JSON","stringify","success","updatedPosts","post","id","handleDislike","handleBookmark","bookmarkedStatus","bookmarked","revertedPosts","handleComment","userName","UserName","text","updatedComments","comments","children","fileName","_jsxFileName","lineNumber","columnNumber","className","includes","postDate","postImg","postBody","length","onClick","disabled","type","placeholder","value","onChange","e","target","href","_c","$RefreshReg$"],"sources":["C:/Users/hjohnston/OneDrive - Neumont College of Computer Science/Documents/GitHub/WhendigoOccurances/Capstone/react-whendigo-app/src/Pages/Posts.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Nav from \"./Nav\";\r\n\r\nconst Posts = () => {\r\n  const [items, setPosts] = useState([]);\r\n  const userId = sessionStorage.getItem('userId');\r\n  const [comment, setComment] = useState(\"\");\r\n  const [user, setUser] = useState(null);\r\n  const [commentsMap, setCommentsMap] = useState({});\r\n\r\n  useEffect(() => {\r\n    console.log(items);\r\n  }, [items]);\r\n\r\n  useEffect(() => {\r\n    const fetchUser = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:3666/user/${userId}`);\r\n        const userData = await response.json();\r\n        setUser(userData);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n  \r\n    if (userId) {\r\n      fetchUser();\r\n    }\r\n  }, [userId]);\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:3666/post\")\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(\"Failed to fetch posts\");\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        const postsWithArrays = data.map((item) => ({\r\n          ...item,\r\n          likes: item.likes || [],\r\n          dislikes: item.dislikes || [],\r\n        }));\r\n        setPosts(postsWithArrays);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchCommentsForPosts = async () => {\r\n      try {\r\n        const updatedCommentsMap = {};\r\n\r\n        await Promise.all(\r\n          items.map(async (item) => {\r\n            const response = await fetch(`http://localhost:3666/post/${item._id}/comments`);\r\n            const commentsData = await response.json();\r\n            updatedCommentsMap[item._id] = commentsData;\r\n          })\r\n        );\r\n\r\n        setCommentsMap(updatedCommentsMap);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    fetchCommentsForPosts();\r\n  }, [items]);\r\n\r\n\r\n  const handleLike = (postId, likeStatus) => {\r\n    if (!userId) {\r\n      alert(\"Please log in to like posts.\");\r\n      return;\r\n    }\r\n  \r\n    let newStatus;\r\n    if (likeStatus === \"liked\") {\r\n      newStatus = \"unlike\";\r\n    } else {\r\n      newStatus = \"like\";\r\n    }\r\n  \r\n    fetch(`http://localhost:3666/post/${postId}/like`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ userId }),\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        if (data.success) {\r\n          const updatedPosts = items.map(post => {\r\n            if (post.id === postId) {\r\n              console.log(postId)\r\n              return { ...post, likeStatus: newStatus };\r\n            }\r\n            return post;\r\n          });\r\n          setPosts(updatedPosts);\r\n        } else {\r\n          console.error(data.error);\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.error(error);\r\n      });\r\n  };\r\n  \r\n  const handleDislike = (postId, likeStatus) => {\r\n    if (!userId) {\r\n      alert(\"Please log in to dislike posts.\");\r\n      return;\r\n    }\r\n  \r\n    let newStatus;\r\n    if (likeStatus === \"disliked\") {\r\n      newStatus = \"undislike\";\r\n    } else {\r\n      newStatus = \"dislike\";\r\n    }\r\n  \r\n    fetch(`http://localhost:3666/post/${postId}/dislike`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ userId }),\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        if (data.success) {\r\n          const updatedPosts = items.map(post => {\r\n            if (post.id === postId) {\r\n              return { ...post, likeStatus: newStatus };\r\n            }\r\n            return post;\r\n          });\r\n          setPosts(updatedPosts);\r\n        } else {\r\n          console.error(data.error);\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.error(error);\r\n      });\r\n  };\r\n\r\n  const handleBookmark = (postId, bookmarkedStatus) => {\r\n    if (!userId) {\r\n      alert(\"Please log in to bookmark posts.\");\r\n      return;\r\n    }\r\n  \r\n    const updatedPosts = items.map((post) => {\r\n      if (post._id === postId) {\r\n        return { ...post, bookmarked: bookmarkedStatus };\r\n      }\r\n      return post;\r\n    });\r\n    setPosts(updatedPosts);\r\n  \r\n    fetch(`http://localhost:3666/post/${postId}/bookmark`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ userId, bookmarked: bookmarkedStatus }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (!data.success) {\r\n          console.error(\"Failed to toggle bookmark:\", data.error);\r\n          const revertedPosts = items.map((post) => {\r\n            if (post._id === postId) {\r\n              return { ...post, bookmarked: !bookmarkedStatus };\r\n            }\r\n            return post;\r\n          });\r\n          setPosts(revertedPosts);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error while toggling bookmark:\", error);\r\n        const revertedPosts = items.map((post) => {\r\n          if (post._id === postId) {\r\n            return { ...post, bookmarked: !bookmarkedStatus };\r\n          }\r\n          return post;\r\n        });\r\n        setPosts(revertedPosts);\r\n      });\r\n  };\r\n\r\n  const handleComment = async (postId) => {\r\n    if (!userId) {\r\n      alert(\"Please log in to comment.\");\r\n      return;\r\n    }\r\n  \r\n    try {\r\n      const response = await fetch(`http://localhost:3666/post/${postId}/comment`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ userId, userName: user.UserName, text: comment, postId }),\r\n      });\r\n  \r\n      const data = await response.json();\r\n  \r\n      if (data.success) {\r\n        const updatedPosts = items.map((post) => {\r\n          if (post._id === postId) { \r\n            const updatedComments = [...post.comments, { userId, userName: user.UserName, text: comment }];\r\n            return { ...post, comments: updatedComments };\r\n          }\r\n          return post;\r\n        });\r\n  \r\n        setPosts(updatedPosts);\r\n        setComment(\"\");\r\n      } else {\r\n        console.error(data.error);\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Nav />\r\n      </div>\r\n\r\n      <div className=\"ContentBox\">\r\n        <div className=\"spacer\"></div>\r\n        <h2 className=\"right\">Post Feed:</h2>\r\n        <div className=\"spacer\"></div>\r\n        {items.map((item) => {\r\n          console.log(\"Comments:\", item.comments);\r\n          const likeStatus = item.likes.includes(userId) ? \"liked\" : item.dislikes.includes(userId) ? \"disliked\" : null;\r\n          return (\r\n            <div key={item.id} className=\"PostBox\">\r\n              <h3>{item.postDate}</h3>\r\n              <p>{item.postImg}</p>\r\n              <p>{item.postBody}</p>\r\n              <p>Likes: {item.likes.length}</p>\r\n              <p>Dislikes: {item.dislikes.length}</p>\r\n              {userId && (\r\n                <>\r\n                  <button\r\n                    onClick={() => handleLike(item._id, likeStatus)}\r\n                    disabled={!userId}\r\n                  >\r\n                    {likeStatus === \"liked\" ? \"Unlike\" : \"Like\"}\r\n                  </button>\r\n                  <button\r\n                    onClick={() => handleDislike(item._id, likeStatus)}\r\n                    disabled={!userId}\r\n                  >\r\n                    {likeStatus === \"disliked\" ? \"Undislike\" : \"Dislike\" }\r\n                    \r\n                   \r\n                  </button>\r\n                </>\r\n              )}\r\n              {userId && (\r\n                <button onClick={() => handleBookmark(item._id, item.bookmarked)} disabled={!userId}>\r\n                  {item.bookmarked ? \"Bookmarked\" : \"Bookmark\"}\r\n                </button>\r\n              )}\r\n            <input type=\"text\" placeholder=\"Write a comment...\" value={comment} onChange={(e) => setComment(e.target.value)} />\r\n            <button onClick={() => handleComment(item._id, user.UserName)} disabled={!userId}>\r\n              Add Comment\r\n            </button>\r\n            <div className=\"Comments\">\r\n            {commentsMap[item._id] && commentsMap[item._id].length > 0 ? (\r\n              commentsMap[item._id].map((comment) => (\r\n                <div key={comment._id} className=\"Comment\">\r\n                  <p>\r\n                    <strong>\r\n                      {comment.userId === userId ? (\r\n                        <a href={`/userProfile`}>{comment.userName}</a>\r\n                      ) : (\r\n                        <a href={`/user/${comment.userId}`}>{comment.userName}</a>\r\n                      )}\r\n                    </strong>\r\n                    : {comment.text}\r\n                    </p>\r\n                  </div>\r\n                ))\r\n                ) : (\r\n                  <p>No comments yet.</p>\r\n                )}\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n        <div className=\"spacer\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Posts;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,GAAG,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExB,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMU,MAAM,GAAGC,cAAc,CAACC,OAAO,CAAC,QAAQ,CAAC;EAC/C,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACe,IAAI,EAAEC,OAAO,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACiB,WAAW,EAAEC,cAAc,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAElDD,SAAS,CAAC,MAAM;IACdoB,OAAO,CAACC,GAAG,CAACZ,KAAK,CAAC;EACpB,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEXT,SAAS,CAAC,MAAM;IACd,MAAMsB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,8BAA6Bb,MAAO,EAAC,CAAC;QACpE,MAAMc,QAAQ,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QACtCT,OAAO,CAACQ,QAAQ,CAAC;MACnB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdP,OAAO,CAACO,KAAK,CAACA,KAAK,CAAC;MACtB;IACF,CAAC;IAED,IAAIhB,MAAM,EAAE;MACVW,SAAS,CAAC,CAAC;IACb;EACF,CAAC,EAAE,CAACX,MAAM,CAAC,CAAC;EAEZX,SAAS,CAAC,MAAM;IACdwB,KAAK,CAAC,4BAA4B,CAAC,CAChCI,IAAI,CAAEL,QAAQ,IAAK;MAClB,IAAI,CAACA,QAAQ,CAACM,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;MAC1C;MACA,OAAOP,QAAQ,CAACG,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,CACDE,IAAI,CAAEG,IAAI,IAAK;MACd,MAAMC,eAAe,GAAGD,IAAI,CAACE,GAAG,CAAEC,IAAI,KAAM;QAC1C,GAAGA,IAAI;QACPC,KAAK,EAAED,IAAI,CAACC,KAAK,IAAI,EAAE;QACvBC,QAAQ,EAAEF,IAAI,CAACE,QAAQ,IAAI;MAC7B,CAAC,CAAC,CAAC;MACH1B,QAAQ,CAACsB,eAAe,CAAC;IAC3B,CAAC,CAAC,CACDK,KAAK,CAAEV,KAAK,IAAK;MAChBP,OAAO,CAACO,KAAK,CAACA,KAAK,CAAC;IACtB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN3B,SAAS,CAAC,MAAM;IACd,MAAMsC,qBAAqB,GAAG,MAAAA,CAAA,KAAY;MACxC,IAAI;QACF,MAAMC,kBAAkB,GAAG,CAAC,CAAC;QAE7B,MAAMC,OAAO,CAACC,GAAG,CACfhC,KAAK,CAACwB,GAAG,CAAC,MAAOC,IAAI,IAAK;UACxB,MAAMX,QAAQ,GAAG,MAAMC,KAAK,CAAE,8BAA6BU,IAAI,CAACQ,GAAI,WAAU,CAAC;UAC/E,MAAMC,YAAY,GAAG,MAAMpB,QAAQ,CAACG,IAAI,CAAC,CAAC;UAC1Ca,kBAAkB,CAACL,IAAI,CAACQ,GAAG,CAAC,GAAGC,YAAY;QAC7C,CAAC,CACH,CAAC;QAEDxB,cAAc,CAACoB,kBAAkB,CAAC;MACpC,CAAC,CAAC,OAAOZ,KAAK,EAAE;QACdP,OAAO,CAACO,KAAK,CAACA,KAAK,CAAC;MACtB;IACF,CAAC;IAEDW,qBAAqB,CAAC,CAAC;EACzB,CAAC,EAAE,CAAC7B,KAAK,CAAC,CAAC;EAGX,MAAMmC,UAAU,GAAGA,CAACC,MAAM,EAAEC,UAAU,KAAK;IACzC,IAAI,CAACnC,MAAM,EAAE;MACXoC,KAAK,CAAC,8BAA8B,CAAC;MACrC;IACF;IAEA,IAAIC,SAAS;IACb,IAAIF,UAAU,KAAK,OAAO,EAAE;MAC1BE,SAAS,GAAG,QAAQ;IACtB,CAAC,MAAM;MACLA,SAAS,GAAG,MAAM;IACpB;IAEAxB,KAAK,CAAE,8BAA6BqB,MAAO,OAAM,EAAE;MACjDI,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAE1C;MAAO,CAAC;IACjC,CAAC,CAAC,CACCiB,IAAI,CAACL,QAAQ,IAAIA,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAC,CACjCE,IAAI,CAACG,IAAI,IAAI;MACZ,IAAIA,IAAI,CAACuB,OAAO,EAAE;QAChB,MAAMC,YAAY,GAAG9C,KAAK,CAACwB,GAAG,CAACuB,IAAI,IAAI;UACrC,IAAIA,IAAI,CAACC,EAAE,KAAKZ,MAAM,EAAE;YACtBzB,OAAO,CAACC,GAAG,CAACwB,MAAM,CAAC;YACnB,OAAO;cAAE,GAAGW,IAAI;cAAEV,UAAU,EAAEE;YAAU,CAAC;UAC3C;UACA,OAAOQ,IAAI;QACb,CAAC,CAAC;QACF9C,QAAQ,CAAC6C,YAAY,CAAC;MACxB,CAAC,MAAM;QACLnC,OAAO,CAACO,KAAK,CAACI,IAAI,CAACJ,KAAK,CAAC;MAC3B;IACF,CAAC,CAAC,CACDU,KAAK,CAACV,KAAK,IAAI;MACdP,OAAO,CAACO,KAAK,CAACA,KAAK,CAAC;IACtB,CAAC,CAAC;EACN,CAAC;EAED,MAAM+B,aAAa,GAAGA,CAACb,MAAM,EAAEC,UAAU,KAAK;IAC5C,IAAI,CAACnC,MAAM,EAAE;MACXoC,KAAK,CAAC,iCAAiC,CAAC;MACxC;IACF;IAEA,IAAIC,SAAS;IACb,IAAIF,UAAU,KAAK,UAAU,EAAE;MAC7BE,SAAS,GAAG,WAAW;IACzB,CAAC,MAAM;MACLA,SAAS,GAAG,SAAS;IACvB;IAEAxB,KAAK,CAAE,8BAA6BqB,MAAO,UAAS,EAAE;MACpDI,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAE1C;MAAO,CAAC;IACjC,CAAC,CAAC,CACCiB,IAAI,CAACL,QAAQ,IAAIA,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAC,CACjCE,IAAI,CAACG,IAAI,IAAI;MACZ,IAAIA,IAAI,CAACuB,OAAO,EAAE;QAChB,MAAMC,YAAY,GAAG9C,KAAK,CAACwB,GAAG,CAACuB,IAAI,IAAI;UACrC,IAAIA,IAAI,CAACC,EAAE,KAAKZ,MAAM,EAAE;YACtB,OAAO;cAAE,GAAGW,IAAI;cAAEV,UAAU,EAAEE;YAAU,CAAC;UAC3C;UACA,OAAOQ,IAAI;QACb,CAAC,CAAC;QACF9C,QAAQ,CAAC6C,YAAY,CAAC;MACxB,CAAC,MAAM;QACLnC,OAAO,CAACO,KAAK,CAACI,IAAI,CAACJ,KAAK,CAAC;MAC3B;IACF,CAAC,CAAC,CACDU,KAAK,CAACV,KAAK,IAAI;MACdP,OAAO,CAACO,KAAK,CAACA,KAAK,CAAC;IACtB,CAAC,CAAC;EACN,CAAC;EAED,MAAMgC,cAAc,GAAGA,CAACd,MAAM,EAAEe,gBAAgB,KAAK;IACnD,IAAI,CAACjD,MAAM,EAAE;MACXoC,KAAK,CAAC,kCAAkC,CAAC;MACzC;IACF;IAEA,MAAMQ,YAAY,GAAG9C,KAAK,CAACwB,GAAG,CAAEuB,IAAI,IAAK;MACvC,IAAIA,IAAI,CAACd,GAAG,KAAKG,MAAM,EAAE;QACvB,OAAO;UAAE,GAAGW,IAAI;UAAEK,UAAU,EAAED;QAAiB,CAAC;MAClD;MACA,OAAOJ,IAAI;IACb,CAAC,CAAC;IACF9C,QAAQ,CAAC6C,YAAY,CAAC;IAEtB/B,KAAK,CAAE,8BAA6BqB,MAAO,WAAU,EAAE;MACrDI,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAE1C,MAAM;QAAEkD,UAAU,EAAED;MAAiB,CAAC;IAC/D,CAAC,CAAC,CACChC,IAAI,CAAEL,QAAQ,IAAKA,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAC,CACnCE,IAAI,CAAEG,IAAI,IAAK;MACd,IAAI,CAACA,IAAI,CAACuB,OAAO,EAAE;QACjBlC,OAAO,CAACO,KAAK,CAAC,4BAA4B,EAAEI,IAAI,CAACJ,KAAK,CAAC;QACvD,MAAMmC,aAAa,GAAGrD,KAAK,CAACwB,GAAG,CAAEuB,IAAI,IAAK;UACxC,IAAIA,IAAI,CAACd,GAAG,KAAKG,MAAM,EAAE;YACvB,OAAO;cAAE,GAAGW,IAAI;cAAEK,UAAU,EAAE,CAACD;YAAiB,CAAC;UACnD;UACA,OAAOJ,IAAI;QACb,CAAC,CAAC;QACF9C,QAAQ,CAACoD,aAAa,CAAC;MACzB;IACF,CAAC,CAAC,CACDzB,KAAK,CAAEV,KAAK,IAAK;MAChBP,OAAO,CAACO,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MACtD,MAAMmC,aAAa,GAAGrD,KAAK,CAACwB,GAAG,CAAEuB,IAAI,IAAK;QACxC,IAAIA,IAAI,CAACd,GAAG,KAAKG,MAAM,EAAE;UACvB,OAAO;YAAE,GAAGW,IAAI;YAAEK,UAAU,EAAE,CAACD;UAAiB,CAAC;QACnD;QACA,OAAOJ,IAAI;MACb,CAAC,CAAC;MACF9C,QAAQ,CAACoD,aAAa,CAAC;IACzB,CAAC,CAAC;EACN,CAAC;EAED,MAAMC,aAAa,GAAG,MAAOlB,MAAM,IAAK;IACtC,IAAI,CAAClC,MAAM,EAAE;MACXoC,KAAK,CAAC,2BAA2B,CAAC;MAClC;IACF;IAEA,IAAI;MACF,MAAMxB,QAAQ,GAAG,MAAMC,KAAK,CAAE,8BAA6BqB,MAAO,UAAS,EAAE;QAC3EI,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAE1C,MAAM;UAAEqD,QAAQ,EAAEhD,IAAI,CAACiD,QAAQ;UAAEC,IAAI,EAAEpD,OAAO;UAAE+B;QAAO,CAAC;MACjF,CAAC,CAAC;MAEF,MAAMd,IAAI,GAAG,MAAMR,QAAQ,CAACG,IAAI,CAAC,CAAC;MAElC,IAAIK,IAAI,CAACuB,OAAO,EAAE;QAChB,MAAMC,YAAY,GAAG9C,KAAK,CAACwB,GAAG,CAAEuB,IAAI,IAAK;UACvC,IAAIA,IAAI,CAACd,GAAG,KAAKG,MAAM,EAAE;YACvB,MAAMsB,eAAe,GAAG,CAAC,GAAGX,IAAI,CAACY,QAAQ,EAAE;cAAEzD,MAAM;cAAEqD,QAAQ,EAAEhD,IAAI,CAACiD,QAAQ;cAAEC,IAAI,EAAEpD;YAAQ,CAAC,CAAC;YAC9F,OAAO;cAAE,GAAG0C,IAAI;cAAEY,QAAQ,EAAED;YAAgB,CAAC;UAC/C;UACA,OAAOX,IAAI;QACb,CAAC,CAAC;QAEF9C,QAAQ,CAAC6C,YAAY,CAAC;QACtBxC,UAAU,CAAC,EAAE,CAAC;MAChB,CAAC,MAAM;QACLK,OAAO,CAACO,KAAK,CAACI,IAAI,CAACJ,KAAK,CAAC;MAC3B;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdP,OAAO,CAACO,KAAK,CAACA,KAAK,CAAC;IACtB;EACF,CAAC;EAED,oBACEvB,OAAA;IAAAiE,QAAA,gBACEjE,OAAA;MAAAiE,QAAA,eACEjE,OAAA,CAACF,GAAG;QAAAoE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,eAENrE,OAAA;MAAKsE,SAAS,EAAC,YAAY;MAAAL,QAAA,gBACzBjE,OAAA;QAAKsE,SAAS,EAAC;MAAQ;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC9BrE,OAAA;QAAIsE,SAAS,EAAC,OAAO;QAAAL,QAAA,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrCrE,OAAA;QAAKsE,SAAS,EAAC;MAAQ;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,EAC7BhE,KAAK,CAACwB,GAAG,CAAEC,IAAI,IAAK;QACnBd,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEa,IAAI,CAACkC,QAAQ,CAAC;QACvC,MAAMtB,UAAU,GAAGZ,IAAI,CAACC,KAAK,CAACwC,QAAQ,CAAChE,MAAM,CAAC,GAAG,OAAO,GAAGuB,IAAI,CAACE,QAAQ,CAACuC,QAAQ,CAAChE,MAAM,CAAC,GAAG,UAAU,GAAG,IAAI;QAC7G,oBACEP,OAAA;UAAmBsE,SAAS,EAAC,SAAS;UAAAL,QAAA,gBACpCjE,OAAA;YAAAiE,QAAA,EAAKnC,IAAI,CAAC0C;UAAQ;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACxBrE,OAAA;YAAAiE,QAAA,EAAInC,IAAI,CAAC2C;UAAO;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACrBrE,OAAA;YAAAiE,QAAA,EAAInC,IAAI,CAAC4C;UAAQ;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACtBrE,OAAA;YAAAiE,QAAA,GAAG,SAAO,EAACnC,IAAI,CAACC,KAAK,CAAC4C,MAAM;UAAA;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACjCrE,OAAA;YAAAiE,QAAA,GAAG,YAAU,EAACnC,IAAI,CAACE,QAAQ,CAAC2C,MAAM;UAAA;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,EACtC9D,MAAM,iBACLP,OAAA,CAAAE,SAAA;YAAA+D,QAAA,gBACEjE,OAAA;cACE4E,OAAO,EAAEA,CAAA,KAAMpC,UAAU,CAACV,IAAI,CAACQ,GAAG,EAAEI,UAAU,CAAE;cAChDmC,QAAQ,EAAE,CAACtE,MAAO;cAAA0D,QAAA,EAEjBvB,UAAU,KAAK,OAAO,GAAG,QAAQ,GAAG;YAAM;cAAAwB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACrC,CAAC,eACTrE,OAAA;cACE4E,OAAO,EAAEA,CAAA,KAAMtB,aAAa,CAACxB,IAAI,CAACQ,GAAG,EAAEI,UAAU,CAAE;cACnDmC,QAAQ,EAAE,CAACtE,MAAO;cAAA0D,QAAA,EAEjBvB,UAAU,KAAK,UAAU,GAAG,WAAW,GAAG;YAAS;cAAAwB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAG9C,CAAC;UAAA,eACT,CACH,EACA9D,MAAM,iBACLP,OAAA;YAAQ4E,OAAO,EAAEA,CAAA,KAAMrB,cAAc,CAACzB,IAAI,CAACQ,GAAG,EAAER,IAAI,CAAC2B,UAAU,CAAE;YAACoB,QAAQ,EAAE,CAACtE,MAAO;YAAA0D,QAAA,EACjFnC,IAAI,CAAC2B,UAAU,GAAG,YAAY,GAAG;UAAU;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtC,CACT,eACHrE,OAAA;YAAO8E,IAAI,EAAC,MAAM;YAACC,WAAW,EAAC,oBAAoB;YAACC,KAAK,EAAEtE,OAAQ;YAACuE,QAAQ,EAAGC,CAAC,IAAKvE,UAAU,CAACuE,CAAC,CAACC,MAAM,CAACH,KAAK;UAAE;YAAAd,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACnHrE,OAAA;YAAQ4E,OAAO,EAAEA,CAAA,KAAMjB,aAAa,CAAC7B,IAAI,CAACQ,GAAG,EAAE1B,IAAI,CAACiD,QAAQ,CAAE;YAACgB,QAAQ,EAAE,CAACtE,MAAO;YAAA0D,QAAA,EAAC;UAElF;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACTrE,OAAA;YAAKsE,SAAS,EAAC,UAAU;YAAAL,QAAA,EACxBnD,WAAW,CAACgB,IAAI,CAACQ,GAAG,CAAC,IAAIxB,WAAW,CAACgB,IAAI,CAACQ,GAAG,CAAC,CAACqC,MAAM,GAAG,CAAC,GACxD7D,WAAW,CAACgB,IAAI,CAACQ,GAAG,CAAC,CAACT,GAAG,CAAEnB,OAAO,iBAChCV,OAAA;cAAuBsE,SAAS,EAAC,SAAS;cAAAL,QAAA,eACxCjE,OAAA;gBAAAiE,QAAA,gBACEjE,OAAA;kBAAAiE,QAAA,EACGvD,OAAO,CAACH,MAAM,KAAKA,MAAM,gBACxBP,OAAA;oBAAGoF,IAAI,EAAG,cAAc;oBAAAnB,QAAA,EAAEvD,OAAO,CAACkD;kBAAQ;oBAAAM,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,gBAE/CrE,OAAA;oBAAGoF,IAAI,EAAG,SAAQ1E,OAAO,CAACH,MAAO,EAAE;oBAAA0D,QAAA,EAAEvD,OAAO,CAACkD;kBAAQ;oBAAAM,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI;gBAC1D;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACK,CAAC,MACP,EAAC3D,OAAO,CAACoD,IAAI;cAAA;gBAAAI,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACZ;YAAC,GAVE3D,OAAO,CAAC4B,GAAG;cAAA4B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAWd,CACN,CAAC,gBAEArE,OAAA;cAAAiE,QAAA,EAAG;YAAgB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG;UACvB;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC;QAAA,GApDEvC,IAAI,CAACuB,EAAE;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAqDZ,CAAC;MAEV,CAAC,CAAC,eACFrE,OAAA;QAAKsE,SAAS,EAAC;MAAQ;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACjE,EAAA,CAlTID,KAAK;AAAAkF,EAAA,GAALlF,KAAK;AAoTX,eAAeA,KAAK;AAAC,IAAAkF,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}