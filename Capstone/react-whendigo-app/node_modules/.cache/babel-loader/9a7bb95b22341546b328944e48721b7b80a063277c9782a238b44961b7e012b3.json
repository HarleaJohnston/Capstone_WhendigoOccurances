{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hjohnston\\\\OneDrive - Neumont College of Computer Science\\\\Documents\\\\GitHub\\\\WhendigoOccurances\\\\Capstone\\\\react-whendigo-app\\\\src\\\\Pages\\\\Posts.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Nav from \"./Nav\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Posts = () => {\n  _s();\n  const [items, setPosts] = useState([]);\n  const userId = sessionStorage.getItem('sessionKey');\n  useEffect(() => {\n    fetch(\"http://localhost:3666/post\").then(response => {\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch posts\");\n      }\n      return response.json();\n    }).then(data => {\n      const postsWithArrays = data.map(item => ({\n        ...item,\n        likes: item.likes || [],\n        dislikes: item.dislikes || []\n      }));\n      setPosts(postsWithArrays);\n    }).catch(error => {\n      console.error(error);\n    });\n  }, []);\n  const handleLikeDislike = (postId, likeStatus) => {\n    if (!userId) {\n      alert(\"Please log in to like or dislike posts.\");\n      return;\n    }\n    let newStatus;\n    if (likeStatus === \"liked\") {\n      newStatus = \"unlike\";\n    } else {\n      newStatus = \"like\";\n    }\n    fetch(`http://localhost:3666/post/${postId}/${newStatus}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        userId\n      })\n    }).then(response => response.json()).then(data => {\n      setPosts(prevPosts => prevPosts.map(post => post.id === postId ? {\n        ...post,\n        likeStatus: data.post.likeStatus\n      } : post));\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n  const handleBookmark = postId => {\n    if (!userId) {\n      alert(\"Please log in to bookmark posts.\");\n      return;\n    }\n    const newBookmarkedStatus = !items.find(item => item.id === postId).bookmarked;\n    fetch(`http://localhost:3666/post/${postId}/bookmark`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        userId,\n        bookmarked: newBookmarkedStatus\n      })\n    }).then(response => response.json()).then(data => {\n      setPosts(prevPosts => prevPosts.map(post => post.id === postId ? {\n        ...post,\n        bookmarked: data.bookmarked\n      } : post));\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ContentBox\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"right\",\n        children: \"Post Feed:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spacer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"PostBox\",\n        children: items.map(item => {\n          const likeStatus = item.likes.includes(userId) ? \"liked\" : item.dislikes.includes(userId) ? \"disliked\" : null;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"PostBox\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: item.postDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: item.postImg\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: item.postBody\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Likes: \", item.likes.length]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Dislikes: \", item.dislikes.length]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }, this), userId && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleLikeDislike(item.id, likeStatus),\n                disabled: likeStatus === \"disliked\" || likeStatus === \"liked\",\n                children: likeStatus === \"liked\" ? \"Unlike\" : \"Like\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleLikeDislike(item.id, likeStatus),\n                disabled: likeStatus === \"liked\" || likeStatus === \"disliked\",\n                children: likeStatus === \"disliked\" ? \"Undislike\" : \"Dislike\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true), userId && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleBookmark(item.id),\n              disabled: item.bookmarked,\n              children: item.bookmarked ? \"Bookmarked\" : \"Bookmark\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 17\n            }, this)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(Posts, \"ZPeTywbkcJKERdzVwPQ4WGWO7I0=\");\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","useEffect","useState","Nav","jsxDEV","_jsxDEV","Fragment","_Fragment","Posts","_s","items","setPosts","userId","sessionStorage","getItem","fetch","then","response","ok","Error","json","data","postsWithArrays","map","item","likes","dislikes","catch","error","console","handleLikeDislike","postId","likeStatus","alert","newStatus","method","headers","body","JSON","stringify","prevPosts","post","id","handleBookmark","newBookmarkedStatus","find","bookmarked","children","fileName","_jsxFileName","lineNumber","columnNumber","className","includes","postDate","postImg","postBody","length","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/hjohnston/OneDrive - Neumont College of Computer Science/Documents/GitHub/WhendigoOccurances/Capstone/react-whendigo-app/src/Pages/Posts.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Nav from \"./Nav\";\r\n\r\nconst Posts = () => {\r\n  const [items, setPosts] = useState([]);\r\n  const userId = sessionStorage.getItem('sessionKey');\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:3666/post\")\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(\"Failed to fetch posts\");\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        const postsWithArrays = data.map((item) => ({\r\n          ...item,\r\n          likes: item.likes || [],\r\n          dislikes: item.dislikes || [],\r\n        }));\r\n        setPosts(postsWithArrays);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }, []);\r\n\r\n  const handleLikeDislike = (postId, likeStatus) => {\r\n    if (!userId) {\r\n      alert(\"Please log in to like or dislike posts.\");\r\n      return;\r\n    }\r\n  \r\n    let newStatus;\r\n  \r\n    if (likeStatus === \"liked\") {\r\n      newStatus = \"unlike\"; \r\n    } else {\r\n      newStatus = \"like\"; \r\n    }\r\n  \r\n    fetch(`http://localhost:3666/post/${postId}/${newStatus}`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ userId }),\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      setPosts(prevPosts => prevPosts.map(post => post.id === postId ? { ...post, likeStatus: data.post.likeStatus } : post));\r\n    })\r\n    .catch(error => {\r\n      console.error(error);\r\n    });\r\n  };\r\n\r\n  const handleBookmark = (postId) => {\r\n    if (!userId) {\r\n      alert(\"Please log in to bookmark posts.\");\r\n      return;\r\n    }\r\n\r\n    const newBookmarkedStatus = !items.find((item) => item.id === postId).bookmarked;\r\n\r\n    fetch(`http://localhost:3666/post/${postId}/bookmark`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ userId, bookmarked: newBookmarkedStatus }),\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      setPosts(prevPosts => prevPosts.map(post => post.id === postId ? { ...post, bookmarked: data.bookmarked } : post));\r\n    })\r\n    .catch(error => {\r\n      console.error(error);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Nav />\r\n      </div>\r\n\r\n      <div className=\"ContentBox\">\r\n        <h2 className=\"right\">Post Feed:</h2>\r\n        <div className=\"spacer\"></div>\r\n        <div className=\"PostBox\">\r\n        {items.map((item) => {\r\n          const likeStatus = item.likes.includes(userId) ? \"liked\" : item.dislikes.includes(userId) ? \"disliked\" : null;\r\n\r\n            return (\r\n              <div key={item.id} className=\"PostBox\">\r\n                <h3>{item.postDate}</h3>\r\n                <p>{item.postImg}</p>\r\n                <p>{item.postBody}</p>\r\n                <p>Likes: {item.likes.length}</p>\r\n                <p>Dislikes: {item.dislikes.length}</p>\r\n                {userId && (\r\n                  <>\r\n                    <button\r\n                      onClick={() => handleLikeDislike(item.id, likeStatus)}\r\n                      disabled={\r\n                        likeStatus === \"disliked\" || likeStatus === \"liked\"\r\n                      }\r\n                    >\r\n                      {likeStatus === \"liked\" ? \"Unlike\" : \"Like\"}\r\n                    </button>\r\n                    <button\r\n                      onClick={() => handleLikeDislike(item.id, likeStatus)}\r\n                      disabled={\r\n                        likeStatus === \"liked\" || likeStatus === \"disliked\"\r\n                      }\r\n                    >\r\n                      {likeStatus === \"disliked\" ? \"Undislike\" : \"Dislike\"}\r\n                    </button>\r\n                  </>\r\n                )}\r\n              {userId && (\r\n                <button\r\n                  onClick={() => handleBookmark(item.id)}\r\n                  disabled={item.bookmarked}\r\n                >\r\n                  {item.bookmarked ? \"Bookmarked\" : \"Bookmark\"}\r\n                </button>\r\n              )}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Posts;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}