{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hjohnston\\\\OneDrive - Neumont College of Computer Science\\\\Documents\\\\GitHub\\\\WhendigoOccurances\\\\Capstone\\\\react-whendigo-app\\\\src\\\\Pages\\\\Posts.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Nav from \"./Nav\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Posts = () => {\n  _s();\n  const [items, setPosts] = useState([]);\n  const userId = sessionStorage.getItem('sessionKey');\n  const [comment, setComment] = useState(\"\");\n  useEffect(() => {\n    console.log(items);\n  }, [items]);\n  useEffect(() => {\n    fetch(\"http://localhost:3666/post\").then(response => {\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch posts\");\n      }\n      return response.json();\n    }).then(data => {\n      const postsWithArrays = data.map(item => ({\n        ...item,\n        likes: item.likes || [],\n        dislikes: item.dislikes || []\n      }));\n      setPosts(postsWithArrays);\n    }).catch(error => {\n      console.error(error);\n    });\n  }, []);\n  const handleLike = (postId, likeStatus) => {\n    if (!userId) {\n      alert(\"Please log in to like posts.\");\n      return;\n    }\n    let newStatus;\n    if (likeStatus === \"liked\") {\n      newStatus = \"unlike\";\n    } else {\n      newStatus = \"like\";\n    }\n    fetch(`http://localhost:3666/post/${postId}/like`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        userId\n      })\n    }).then(response => response.json()).then(data => {\n      if (data.success) {\n        const updatedPosts = items.map(post => {\n          if (post.id === postId) {\n            console.log(postId);\n            return {\n              ...post,\n              likeStatus: newStatus\n            };\n          }\n          return post;\n        });\n        setPosts(updatedPosts);\n      } else {\n        console.error(data.error);\n      }\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n  const handleDislike = (postId, likeStatus) => {\n    if (!userId) {\n      alert(\"Please log in to dislike posts.\");\n      return;\n    }\n    let newStatus;\n    if (likeStatus === \"disliked\") {\n      newStatus = \"undislike\";\n    } else {\n      newStatus = \"dislike\";\n    }\n    fetch(`http://localhost:3666/post/${postId}/dislike`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        userId\n      })\n    }).then(response => response.json()).then(data => {\n      if (data.success) {\n        const updatedPosts = items.map(post => {\n          if (post.id === postId) {\n            return {\n              ...post,\n              likeStatus: newStatus\n            };\n          }\n          return post;\n        });\n        setPosts(updatedPosts);\n      } else {\n        console.error(data.error);\n      }\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n  const handleBookmark = postId => {\n    if (!userId) {\n      alert(\"Please log in to bookmark posts.\");\n      return;\n    }\n    const postToBookmark = items.find(item => item._id === postId);\n    if (!postToBookmark) {\n      console.error(\"Post not found.\");\n      return;\n    }\n    const newBookmarkedStatus = !postToBookmark.bookmarked;\n    fetch(`http://localhost:3666/post/${postId}/bookmark`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        userId,\n        bookmarked: newBookmarkedStatus\n      })\n    }).then(response => response.json()).then(data => {\n      setPosts(prevPosts => prevPosts.map(post => post.id === postId ? {\n        ...post,\n        bookmarked: data.bookmarked\n      } : post));\n    }).catch(error => {\n      console.error(\"Error while bookmarking:\", error);\n    });\n  };\n  const handleComment = async postId => {\n    if (!userId) {\n      alert(\"Please log in to comment.\");\n      return;\n    }\n    try {\n      const response = await fetch(`http://localhost:3666/post/${postId}/comment`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          userId,\n          comment\n        })\n      });\n      const data = await response.json();\n      if (data.success) {\n        const user = await getUserById(userId);\n        const updatedPosts = items.map(post => {\n          if (post.id === postId) {\n            const updatedComments = [...post.comments, {\n              userId,\n              userName: user.UserName,\n              text: comment\n            }];\n            return {\n              ...post,\n              comments: updatedComments\n            };\n          }\n          return post;\n        });\n        setPosts(updatedPosts);\n        setComment(\"\");\n      } else {\n        console.error(data.error);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ContentBox\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spacer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"right\",\n        children: \"Post Feed:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spacer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), items.map(item => {\n        const likeStatus = item.likes.includes(userId) ? \"liked\" : item.dislikes.includes(userId) ? \"disliked\" : null;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"PostBox\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: item.postDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: item.postImg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: item.postBody\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Likes: \", item.likes.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Dislikes: \", item.dislikes.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 15\n          }, this), userId && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleLike(item._id, likeStatus),\n              disabled: !userId,\n              children: likeStatus === \"liked\" ? \"Unlike\" : \"Like\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDislike(item._id, likeStatus),\n              disabled: !userId,\n              children: likeStatus === \"disliked\" ? \"Undislike\" : \"Dislike\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true), userId && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleBookmark(item._id),\n            disabled: item.bookmarked,\n            children: item.bookmarked ? \"Bookmarked\" : \"Bookmark\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Write a comment...\",\n            value: comment,\n            onChange: e => setComment(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleComment(item._id),\n            disabled: !userId,\n            children: \"Add Comment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Comments\",\n            children: item.comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"Comment\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: comment.userName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 24\n                }, this), \": \", comment.text]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 21\n              }, this)\n            }, comment._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 15\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spacer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 182,\n    columnNumber: 5\n  }, this);\n};\n_s(Posts, \"QjK52qndRrI/+a6GDJmtwJt8z9o=\");\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","useEffect","useState","Nav","jsxDEV","_jsxDEV","Fragment","_Fragment","Posts","_s","items","setPosts","userId","sessionStorage","getItem","comment","setComment","console","log","fetch","then","response","ok","Error","json","data","postsWithArrays","map","item","likes","dislikes","catch","error","handleLike","postId","likeStatus","alert","newStatus","method","headers","body","JSON","stringify","success","updatedPosts","post","id","handleDislike","handleBookmark","postToBookmark","find","_id","newBookmarkedStatus","bookmarked","prevPosts","handleComment","user","getUserById","updatedComments","comments","userName","UserName","text","children","fileName","_jsxFileName","lineNumber","columnNumber","className","includes","postDate","postImg","postBody","length","onClick","disabled","type","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/Users/hjohnston/OneDrive - Neumont College of Computer Science/Documents/GitHub/WhendigoOccurances/Capstone/react-whendigo-app/src/Pages/Posts.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Nav from \"./Nav\";\r\n\r\nconst Posts = () => {\r\n  const [items, setPosts] = useState([]);\r\n  const userId = sessionStorage.getItem('sessionKey');\r\n  const [comment, setComment] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    console.log(items);\r\n  }, [items]);\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:3666/post\")\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(\"Failed to fetch posts\");\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        const postsWithArrays = data.map((item) => ({\r\n          ...item,\r\n          likes: item.likes || [],\r\n          dislikes: item.dislikes || [],\r\n        }));\r\n        setPosts(postsWithArrays);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }, []);\r\n\r\n  const handleLike = (postId, likeStatus) => {\r\n    if (!userId) {\r\n      alert(\"Please log in to like posts.\");\r\n      return;\r\n    }\r\n  \r\n    let newStatus;\r\n    if (likeStatus === \"liked\") {\r\n      newStatus = \"unlike\";\r\n    } else {\r\n      newStatus = \"like\";\r\n    }\r\n  \r\n    fetch(`http://localhost:3666/post/${postId}/like`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ userId }),\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        if (data.success) {\r\n          const updatedPosts = items.map(post => {\r\n            if (post.id === postId) {\r\n              console.log(postId)\r\n              return { ...post, likeStatus: newStatus };\r\n            }\r\n            return post;\r\n          });\r\n          setPosts(updatedPosts);\r\n        } else {\r\n          console.error(data.error);\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.error(error);\r\n      });\r\n  };\r\n  \r\n  const handleDislike = (postId, likeStatus) => {\r\n    if (!userId) {\r\n      alert(\"Please log in to dislike posts.\");\r\n      return;\r\n    }\r\n  \r\n    let newStatus;\r\n    if (likeStatus === \"disliked\") {\r\n      newStatus = \"undislike\";\r\n    } else {\r\n      newStatus = \"dislike\";\r\n    }\r\n  \r\n    fetch(`http://localhost:3666/post/${postId}/dislike`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ userId }),\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        if (data.success) {\r\n          const updatedPosts = items.map(post => {\r\n            if (post.id === postId) {\r\n              return { ...post, likeStatus: newStatus };\r\n            }\r\n            return post;\r\n          });\r\n          setPosts(updatedPosts);\r\n        } else {\r\n          console.error(data.error);\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.error(error);\r\n      });\r\n  };\r\n\r\n  const handleBookmark = (postId) => {\r\n    if (!userId) {\r\n      alert(\"Please log in to bookmark posts.\");\r\n      return;\r\n    }\r\n  \r\n    const postToBookmark = items.find((item) => item._id === postId);\r\n  \r\n    if (!postToBookmark) {\r\n      console.error(\"Post not found.\");\r\n      return;\r\n    }\r\n  \r\n    const newBookmarkedStatus = !postToBookmark.bookmarked;\r\n  \r\n    fetch(`http://localhost:3666/post/${postId}/bookmark`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ userId, bookmarked: newBookmarkedStatus }),\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        setPosts(prevPosts => prevPosts.map(post => post.id === postId ? { ...post, bookmarked: data.bookmarked } : post));\r\n      })\r\n      .catch(error => {\r\n        console.error(\"Error while bookmarking:\", error);\r\n      });\r\n  };\r\n\r\n  const handleComment = async (postId) => {\r\n    if (!userId) {\r\n      alert(\"Please log in to comment.\");\r\n      return;\r\n    }\r\n  \r\n    try {\r\n      const response = await fetch(`http://localhost:3666/post/${postId}/comment`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ userId, comment }),\r\n      });\r\n  \r\n      const data = await response.json();\r\n  \r\n      if (data.success) {\r\n        const user = await getUserById(userId);\r\n        const updatedPosts = items.map(post => {\r\n          if (post.id === postId) {\r\n            const updatedComments = [...post.comments, { userId, userName: user.UserName, text: comment }];\r\n            return { ...post, comments: updatedComments };\r\n          }\r\n          return post;\r\n        });\r\n  \r\n        setPosts(updatedPosts);\r\n        setComment(\"\"); \r\n      } else {\r\n        console.error(data.error);\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Nav />\r\n      </div>\r\n\r\n      <div className=\"ContentBox\">\r\n        <div className=\"spacer\"></div>\r\n        <h2 className=\"right\">Post Feed:</h2>\r\n        <div className=\"spacer\"></div>\r\n        {items.map((item) => {\r\n          const likeStatus = item.likes.includes(userId) ? \"liked\" : item.dislikes.includes(userId) ? \"disliked\" : null;\r\n          return (\r\n            <div key={item.id} className=\"PostBox\">\r\n              <h3>{item.postDate}</h3>\r\n              <p>{item.postImg}</p>\r\n              <p>{item.postBody}</p>\r\n              <p>Likes: {item.likes.length}</p>\r\n              <p>Dislikes: {item.dislikes.length}</p>\r\n              {userId && (\r\n                <>\r\n                  <button\r\n                    onClick={() => handleLike(item._id, likeStatus)}\r\n                    disabled={!userId}\r\n                  >\r\n                    {likeStatus === \"liked\" ? \"Unlike\" : \"Like\"}\r\n                  </button>\r\n                  <button\r\n                    onClick={() => handleDislike(item._id, likeStatus)}\r\n                    disabled={!userId}\r\n                  >\r\n                    {likeStatus === \"disliked\" ? \"Undislike\" : \"Dislike\" }\r\n                    \r\n                   \r\n                  </button>\r\n                </>\r\n              )}\r\n              {userId && (\r\n                <button\r\n                  onClick={() => handleBookmark(item._id)}\r\n                  disabled={item.bookmarked}\r\n                >\r\n                  {item.bookmarked ? \"Bookmarked\" : \"Bookmark\"}\r\n                </button>\r\n              )}\r\n              <input type=\"text\" placeholder=\"Write a comment...\"value={comment}\r\n                onChange={(e) => setComment(e.target.value)}\r\n              />\r\n              <button onClick={() => handleComment(item._id)} disabled={!userId}>\r\n                Add Comment\r\n              </button>\r\n              <div className=\"Comments\">\r\n                {item.comments.map(comment => (\r\n                  <div key={comment._id} className=\"Comment\">\r\n                    <p><strong>{comment.userName}</strong>: {comment.text}</p>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n        <div className=\"spacer\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Posts;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}