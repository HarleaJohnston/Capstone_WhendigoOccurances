{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hjohnston\\\\OneDrive - Neumont College of Computer Science\\\\Documents\\\\GitHub\\\\WhendigoOccurances\\\\Capstone\\\\react-whendigo-app\\\\src\\\\Pages\\\\Posts.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Nav from \"./Nav\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Posts = () => {\n  _s();\n  const [items, setPosts] = useState([]);\n  const userId = sessionStorage.getItem('sessionKey');\n  useEffect(() => {\n    fetch(\"http://localhost:3666/post\").then(response => {\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch posts\");\n      }\n      return response.json();\n    }).then(data => {\n      if (data.success) {\n        const updatedPosts = items.map(post => {\n          if (post.id === postId) {\n            return {\n              ...post,\n              likeStatus: newStatus\n            };\n          }\n          return post;\n        });\n        setPosts(updatedPosts);\n      } else {\n        console.error(data.error);\n      }\n    });\n  }, []);\n  const handleLikeDislike = (postId, likeStatus) => {\n    if (!userId) {\n      alert(\"Please log in to like or dislike posts.\");\n      return;\n    }\n    let newStatus;\n    if (likeStatus === \"liked\") {\n      newStatus = \"unlike\";\n    } else {\n      newStatus = \"like\";\n    }\n    fetch(`http://localhost:3666/post/${postId}/${newStatus}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        userId\n      })\n    }).then(response => response.json()).then(data => {\n      if (data.success) {\n        const updatedPosts = items.map(post => {\n          if (post.id === postId) {\n            return {\n              ...post,\n              likeStatus: newStatus\n            };\n          }\n          return post;\n        });\n        setPosts(updatedPosts);\n      } else {\n        console.error(data.error);\n      }\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n  const handleBookmark = postId => {\n    if (!userId) {\n      alert(\"Please log in to bookmark posts.\");\n      return;\n    }\n    const newBookmarkedStatus = !items.find(item => item.id === postId).bookmarked;\n    fetch(`http://localhost:3666/post/${postId}/bookmark`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        userId,\n        bookmarked: newBookmarkedStatus\n      })\n    }).then(response => response.json()).then(data => {\n      setPosts(prevPosts => prevPosts.map(post => post.id === postId ? {\n        ...post,\n        bookmarked: data.bookmarked\n      } : post));\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ContentBox\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spacer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"right\",\n        children: \"Post Feed:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spacer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), items.map(item => {\n        const likeStatus = item.likes.includes(userId) ? \"liked\" : item.dislikes.includes(userId) ? \"disliked\" : null;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"PostBox\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: item.postDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: item.postImg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: item.postBody\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Likes: \", item.likes.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Dislikes: \", item.dislikes.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 17\n          }, this), userId && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleLikeDislike(item.id, likeStatus),\n              disabled: likeStatus === \"disliked\" || likeStatus === \"liked\",\n              children: likeStatus === \"liked\" ? \"Unlike\" : \"Like\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleLikeDislike(item.id, likeStatus),\n              disabled: likeStatus === \"liked\" || likeStatus === \"disliked\",\n              children: likeStatus === \"disliked\" ? \"Undislike\" : \"Dislike\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true), userId && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleBookmark(item.id),\n            disabled: item.bookmarked,\n            children: item.bookmarked ? \"Bookmarked\" : \"Bookmark\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 17\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 15\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spacer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n_s(Posts, \"ZPeTywbkcJKERdzVwPQ4WGWO7I0=\");\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","useEffect","useState","Nav","jsxDEV","_jsxDEV","Fragment","_Fragment","Posts","_s","items","setPosts","userId","sessionStorage","getItem","fetch","then","response","ok","Error","json","data","success","updatedPosts","map","post","id","postId","likeStatus","newStatus","console","error","handleLikeDislike","alert","method","headers","body","JSON","stringify","catch","handleBookmark","newBookmarkedStatus","find","item","bookmarked","prevPosts","children","fileName","_jsxFileName","lineNumber","columnNumber","className","likes","includes","dislikes","postDate","postImg","postBody","length","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/hjohnston/OneDrive - Neumont College of Computer Science/Documents/GitHub/WhendigoOccurances/Capstone/react-whendigo-app/src/Pages/Posts.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Nav from \"./Nav\";\r\n\r\nconst Posts = () => {\r\n  const [items, setPosts] = useState([]);\r\n  const userId = sessionStorage.getItem('sessionKey');\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:3666/post\")\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(\"Failed to fetch posts\");\r\n        }\r\n        return response.json();\r\n      })\r\n      .then(data => {\r\n        if (data.success) {\r\n          const updatedPosts = items.map(post => {\r\n            if (post.id === postId) {\r\n              return { ...post, likeStatus: newStatus };\r\n            }\r\n            return post;\r\n          });\r\n          setPosts(updatedPosts);\r\n        } else {\r\n          console.error(data.error);\r\n        }\r\n      })\r\n  }, []);\r\n\r\n  const handleLikeDislike = (postId, likeStatus) => {\r\n    if (!userId) {\r\n      alert(\"Please log in to like or dislike posts.\");\r\n      return;\r\n    }\r\n  \r\n    let newStatus;\r\n  \r\n    if (likeStatus === \"liked\") {\r\n      newStatus = \"unlike\"; \r\n    } else {\r\n      newStatus = \"like\"; \r\n    }\r\n  \r\n    fetch(`http://localhost:3666/post/${postId}/${newStatus}`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ userId }),\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      if (data.success) {\r\n        const updatedPosts = items.map(post => {\r\n          if (post.id === postId) {\r\n            return { ...post, likeStatus: newStatus };\r\n          }\r\n          return post;\r\n        });\r\n        setPosts(updatedPosts);\r\n      } else {\r\n        console.error(data.error);\r\n      }\r\n    })\r\n    .catch(error => {\r\n      console.error(error);\r\n    });\r\n  };\r\n\r\n  const handleBookmark = (postId) => {\r\n    if (!userId) {\r\n      alert(\"Please log in to bookmark posts.\");\r\n      return;\r\n    }\r\n\r\n    const newBookmarkedStatus = !items.find((item) => item.id === postId).bookmarked;\r\n\r\n    fetch(`http://localhost:3666/post/${postId}/bookmark`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ userId, bookmarked: newBookmarkedStatus }),\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      setPosts(prevPosts => prevPosts.map(post => post.id === postId ? { ...post, bookmarked: data.bookmarked } : post));\r\n    })\r\n    .catch(error => {\r\n      console.error(error);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Nav />\r\n      </div>\r\n\r\n      <div className=\"ContentBox\">\r\n      <div className=\"spacer\"></div>\r\n        <h2 className=\"right\">Post Feed:</h2>\r\n        <div className=\"spacer\"></div>\r\n        {items.map((item) => {\r\n          const likeStatus = item.likes.includes(userId) ? \"liked\" : item.dislikes.includes(userId) ? \"disliked\" : null;\r\n\r\n            return (\r\n              <div key={item.id} className=\"PostBox\">\r\n                <h3>{item.postDate}</h3>\r\n                <p>{item.postImg}</p>\r\n                <p>{item.postBody}</p>\r\n                <p>Likes: {item.likes.length}</p>\r\n                <p>Dislikes: {item.dislikes.length}</p>\r\n                {userId && (\r\n                  <>\r\n                    <button\r\n                      onClick={() => handleLikeDislike(item.id, likeStatus)}\r\n                      disabled={\r\n                        likeStatus === \"disliked\" || likeStatus === \"liked\"\r\n                      }\r\n                    >\r\n                      {likeStatus === \"liked\" ? \"Unlike\" : \"Like\"}\r\n                    </button>\r\n                    <button\r\n                      onClick={() => handleLikeDislike(item.id, likeStatus)}\r\n                      disabled={\r\n                        likeStatus === \"liked\" || likeStatus === \"disliked\"\r\n                      }\r\n                    >\r\n                      {likeStatus === \"disliked\" ? \"Undislike\" : \"Dislike\"}\r\n                    </button>\r\n                  </>\r\n                )}\r\n              {userId && (\r\n                <button\r\n                  onClick={() => handleBookmark(item.id)}\r\n                  disabled={item.bookmarked}\r\n                >\r\n                  {item.bookmarked ? \"Bookmarked\" : \"Bookmark\"}\r\n                </button>\r\n              )}\r\n              </div>\r\n            );\r\n          })}\r\n          <div className=\"spacer\"></div>\r\n        </div>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default Posts;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}