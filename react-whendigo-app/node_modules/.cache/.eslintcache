[{"C:\\Users\\hjohnston\\OneDrive - Neumont College of Computer Science\\Documents\\GitHub\\WhendigoOccurances\\react-whendigo-app\\src\\index.js":"1","C:\\Users\\hjohnston\\OneDrive - Neumont College of Computer Science\\Documents\\GitHub\\WhendigoOccurances\\react-whendigo-app\\src\\App.js":"2","C:\\Users\\hjohnston\\OneDrive - Neumont College of Computer Science\\Documents\\GitHub\\WhendigoOccurances\\react-whendigo-app\\src\\reportWebVitals.js":"3","C:\\Users\\hjohnston\\OneDrive - Neumont College of Computer Science\\Documents\\GitHub\\WhendigoOccurances\\react-whendigo-app\\src\\Pages\\Posts.js":"4","C:\\Users\\hjohnston\\OneDrive - Neumont College of Computer Science\\Documents\\GitHub\\WhendigoOccurances\\react-whendigo-app\\src\\Pages\\Collections.js":"5","C:\\Users\\hjohnston\\OneDrive - Neumont College of Computer Science\\Documents\\GitHub\\WhendigoOccurances\\react-whendigo-app\\src\\Pages\\Signup.js":"6","C:\\Users\\hjohnston\\OneDrive - Neumont College of Computer Science\\Documents\\GitHub\\WhendigoOccurances\\react-whendigo-app\\src\\Pages\\Login.js":"7","C:\\Users\\hjohnston\\OneDrive - Neumont College of Computer Science\\Documents\\GitHub\\WhendigoOccurances\\react-whendigo-app\\src\\Pages\\UserProfile.js":"8","C:\\Users\\hjohnston\\OneDrive - Neumont College of Computer Science\\Documents\\GitHub\\WhendigoOccurances\\react-whendigo-app\\src\\Pages\\UserDisplay.js":"9","C:\\Users\\hjohnston\\OneDrive - Neumont College of Computer Science\\Documents\\GitHub\\WhendigoOccurances\\react-whendigo-app\\src\\CRUD\\UpdateUser.js":"10","C:\\Users\\hjohnston\\OneDrive - Neumont College of Computer Science\\Documents\\GitHub\\WhendigoOccurances\\react-whendigo-app\\src\\CRUD\\Delete.js":"11","C:\\Users\\hjohnston\\OneDrive - Neumont College of Computer Science\\Documents\\GitHub\\WhendigoOccurances\\react-whendigo-app\\src\\CRUD\\Update.js":"12","C:\\Users\\hjohnston\\OneDrive - Neumont College of Computer Science\\Documents\\GitHub\\WhendigoOccurances\\react-whendigo-app\\src\\CRUD\\Create.js":"13","C:\\Users\\hjohnston\\OneDrive - Neumont College of Computer Science\\Documents\\GitHub\\WhendigoOccurances\\react-whendigo-app\\src\\ErrorPages\\Error.js":"14","C:\\Users\\hjohnston\\OneDrive - Neumont College of Computer Science\\Documents\\GitHub\\WhendigoOccurances\\react-whendigo-app\\src\\Souls\\CookieClicker.js":"15","C:\\Users\\hjohnston\\OneDrive - Neumont College of Computer Science\\Documents\\GitHub\\WhendigoOccurances\\react-whendigo-app\\src\\ErrorPage\\Error2.js":"16","C:\\Users\\hjohnston\\OneDrive - Neumont College of Computer Science\\Documents\\GitHub\\WhendigoOccurances\\react-whendigo-app\\src\\Pages\\Nav.js":"17"},{"size":2145,"mtime":1698002312800,"results":"18","hashOfConfig":"19"},{"size":4462,"mtime":1698002312716,"results":"20","hashOfConfig":"19"},{"size":375,"mtime":1698002312800,"results":"21","hashOfConfig":"19"},{"size":10172,"mtime":1698002312737,"results":"22","hashOfConfig":"19"},{"size":205,"mtime":1698002312734,"results":"23","hashOfConfig":"19"},{"size":2828,"mtime":1698002312740,"results":"24","hashOfConfig":"19"},{"size":1914,"mtime":1698002312736,"results":"25","hashOfConfig":"19"},{"size":7829,"mtime":1698002312741,"results":"26","hashOfConfig":"19"},{"size":4160,"mtime":1698002312741,"results":"27","hashOfConfig":"19"},{"size":2779,"mtime":1698002312719,"results":"28","hashOfConfig":"19"},{"size":1151,"mtime":1698002312717,"results":"29","hashOfConfig":"19"},{"size":2822,"mtime":1698002312718,"results":"30","hashOfConfig":"19"},{"size":1965,"mtime":1698002312717,"results":"31","hashOfConfig":"19"},{"size":198,"mtime":1698002312721,"results":"32","hashOfConfig":"19"},{"size":327,"mtime":1698002312743,"results":"33","hashOfConfig":"19"},{"size":317,"mtime":1698002312720,"results":"34","hashOfConfig":"19"},{"size":2015,"mtime":1698002312736,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},"534p48",{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\hjohnston\\OneDrive - Neumont College of Computer Science\\Documents\\GitHub\\WhendigoOccurances\\react-whendigo-app\\src\\index.js",["94"],[],"import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { createBrowserRouter, RouterProvider, useRoutes } from 'react-router-dom';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport Posts from './Pages/Posts'\r\nimport Collections from './Pages/Collections';\r\nimport Create from './CRUD/Create'\r\nimport Update from './CRUD/Update'\r\nimport Delete from './CRUD/Delete'\r\nimport Login from './Pages/Login';\r\nimport Signup from './Pages/Signup'\r\nimport Error from './ErrorPages/Error';\r\nimport Error2 from './ErrorPage/Error2';\r\nimport UserProfile from './Pages/UserProfile';\r\nimport UpdateUser from './CRUD/UpdateUser';\r\nimport UserDisplay from './Pages/UserDisplay';\r\nimport CookieClicker from './Souls/CookieClicker';\r\n\r\nconst router = createBrowserRouter([\r\n  {\r\n    path: '/',\r\n    element: (\r\n      <>\r\n      <App/>\r\n      </>\r\n    ),\r\n  },\r\n  {\r\n    path: '/posts',\r\n    element: <Posts/>,\r\n  },\r\n  {\r\n    path: '/collections',\r\n    element: <Collections/>,\r\n  },\r\n  {\r\n    path: '/create',\r\n    element: <Create/>,\r\n  },\r\n  {\r\n    path: '/update/:itemId',\r\n    element: <Update/>,\r\n  },\r\n  {\r\n    path: '/delete/:id',\r\n    element: <Delete/>,\r\n  },\r\n  {\r\n    path: '/login',\r\n    element: <Login/>,\r\n  },\r\n  {\r\n    path: '/signup',\r\n    element: <Signup/>,\r\n  }\r\n  ,\r\n  {\r\n    path: '/error',\r\n    element: <Error/>,\r\n  },\r\n  {\r\n    path: '/error2',\r\n    element: <Error2/>,\r\n  }\r\n  ,\r\n  {\r\n    path: '/userProfile',\r\n    element: <UserProfile/>,\r\n  },\r\n  {\r\n    path: '/updateUser',\r\n    element: <UpdateUser/>,\r\n  },\r\n  {\r\n    path: '/user/:id',\r\n    element: <UserDisplay/>,\r\n  },\r\n  {\r\n    path: '/clicker',\r\n    element: <CookieClicker/>\r\n  }\r\n]);\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n      <RouterProvider router={router} />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","C:\\Users\\hjohnston\\OneDrive - Neumont College of Computer Science\\Documents\\GitHub\\WhendigoOccurances\\react-whendigo-app\\src\\App.js",["95","96","97","98","99"],[],"import './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport 'jquery/dist/jquery.min.js'\r\nimport 'bootstrap/dist/js/bootstrap.min.js'\r\nimport Nav from './Pages/Nav';\r\n\r\nfunction App() {\r\n\r\n  return (\r\n      <div>\r\n        <body>\r\n        <div>\r\n            <div> \r\n              <img className='bannerSize' src={process.env.PUBLIC_URL + '/Banner 1.png'}/>\r\n            </div>\r\n          <Nav/>      \r\n          </div>\r\n            <div className=\"ContentBox\">\r\n            <div className=\"spacer\"></div>\r\n              <h1 className=\"HeaderFont\">\"Whendigo isn't a place where people live but settle. It's a place where specters, creatures, and the unknown rule. I wouldn't even say it's a town at all but a living being waiting to swallow us whole. - Francis Greeves Whendigo</h1>\r\n              <div className=\"spacer\"></div>\r\n                  <div className=\"Center\">\r\n                        <div className='Center'>\r\n                            <div className=\"Column\">\r\n                                <div className=\"Row\">\r\n                                <div className='Box'>\r\n                                    <img className=\"ImgSize\" src={process.env.PUBLIC_URL + '/WhendigoSign.png'} alt='Dont come here'></img>\r\n                                  </div>\r\n                                  <div className=\"Box2\">\r\n                                    <h3 className=\"FontSize\">Whendigo, Missouri</h3>\r\n                                    <p className=\"FontSize2\">\r\n                                      Whendigo, Missouri was founded in 1831. Though the orginal town of Whendigo was burned to the ground in 1841. If the rumors are true, you can still find the charred remains deep in the woods around Dead Man's Walk.\r\n                                      The current Whendigo, Missouri - \"Missouri's most Haunted Town\"  was rebuilt in 1842. Where it soon became a tourist hot spot for those who love all things that go bump in the night. \r\n                                    </p>\r\n                                  </div>\r\n                              </div>\r\n                              <div className=\"spacer\"></div>\r\n                              <div className=\"Row\">\r\n                                  <div className=\"Box2\">\r\n                                    <h3 className=\"FontSize\">Tourist Trap Whendigo</h3>\r\n                                    <p className=\"FontSize2\">\r\n                                    After the fire, Whendigo residents started to have more strange happenings. Stories of creatures in the woods, cultists terrorizing citizens, and of ghosts seen around town and in the woods.\r\n                                    Soon Wendigo became the tourist trap it’s known for around the 1950’s. Drawing the masses in with haunted locations like Dead Man’s Walk, Whendigo Inn, and St. Johns All Girls College. \r\n                                    </p>\r\n                                  </div>\r\n                                  <div className='Box3'>\r\n                                    <img className=\"ImgSize\" src={process.env.PUBLIC_URL + '/town.jpg'}></img>\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"spacer\"></div>\r\n                            </div>\r\n\r\n                        </div>\r\n                  </div>\r\n            </div>\r\n        </body>\r\n        <div class=\"container\">\r\n          <footer class=\"d-flex flex-wrap justify-content-between align-items-center py-3 my-4 border-top\">\r\n            <div class=\"col-md-4 d-flex align-items-center\">\r\n              <a href=\"/\" class=\"mb-3 me-2 mb-md-0 text-body-secondary text-decoration-none lh-1\">\r\n                <svg class=\"bi\" width=\"30\" height=\"24\"></svg>\r\n              </a>\r\n              <span class=\"mb-3 mb-md-0 text-body-secondary\">© 2023 Company, Inc</span>\r\n            </div>\r\n\r\n            <ul class=\"nav col-md-4 justify-content-end list-unstyled d-flex\">\r\n              <li class=\"ms-3\"><a class=\"text-body-secondary\" href=\"#\"><svg class=\"bi\" width=\"24\" height=\"24\"></svg></a></li>\r\n              <li class=\"ms-3\"><a class=\"text-body-secondary\" href=\"#\"><svg class=\"bi\" width=\"24\" height=\"24\"></svg></a></li>\r\n              <li class=\"ms-3\"><a class=\"text-body-secondary\" href=\"#\"><svg class=\"bi\" width=\"24\" height=\"24\"></svg></a></li>\r\n            </ul>\r\n          </footer>\r\n        </div>\r\n      </div>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\hjohnston\\OneDrive - Neumont College of Computer Science\\Documents\\GitHub\\WhendigoOccurances\\react-whendigo-app\\src\\reportWebVitals.js",[],[],"C:\\Users\\hjohnston\\OneDrive - Neumont College of Computer Science\\Documents\\GitHub\\WhendigoOccurances\\react-whendigo-app\\src\\Pages\\Posts.js",["100"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { FaThumbsUp, FaThumbsDown, FaBookmark, FaRegBookmark } from \"react-icons/fa\";\r\nimport Nav from \"./Nav\";\r\n\r\nconst Posts = () => {\r\n  const [items, setPosts] = useState([]);\r\n  const [itemImg, setItemImg] = useState(\"\");\r\n  const userId = sessionStorage.getItem('userId');\r\n  const [comment, setComment] = useState(\"\");\r\n  const [user, setUser] = useState(null);\r\n  const [commentsMap, setCommentsMap] = useState({});\r\n\r\n  useEffect(() => {\r\n    console.log(items);\r\n  }, [items]);\r\n\r\n  useEffect(() => {\r\n    const fetchUser = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:3666/user/${userId}`);\r\n        const userData = await response.json();\r\n        setUser(userData);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n  \r\n    if (userId) {\r\n      fetchUser();\r\n    }\r\n  }, [userId]);\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:3666/post\")\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(\"Failed to fetch posts\");\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        const postsWithArrays = data.map((item) => ({\r\n          ...item,\r\n          likes: item.likes || [],\r\n          dislikes: item.dislikes || [],\r\n          bookmarked: item.bookmarked || []\r\n        }));\r\n        setPosts(postsWithArrays);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchCommentsForPosts = async () => {\r\n      try {\r\n        const updatedCommentsMap = {};\r\n\r\n        await Promise.all(\r\n          items.map(async (item) => {\r\n            const response = await fetch(`http://localhost:3666/post/${item._id}/comments`);\r\n            const commentsData = await response.json();\r\n            updatedCommentsMap[item._id] = commentsData;\r\n          })\r\n        );\r\n\r\n        setCommentsMap(updatedCommentsMap);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    fetchCommentsForPosts();\r\n  }, [items]);\r\n\r\n\r\n  const handleLike = (postId, likeStatus) => {\r\n    if (!userId) {\r\n      alert(\"Please log in to like posts.\");\r\n      return;\r\n    }\r\n  \r\n    let newStatus;\r\n    if (likeStatus === \"liked\") {\r\n      newStatus = \"unlike\";\r\n    } else {\r\n      newStatus = \"like\";\r\n    }\r\n  \r\n    fetch(`http://localhost:3666/post/${postId}/like`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ userId }),\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        if (data.success) {\r\n          const updatedPosts = items.map(post => {\r\n            if (post.id === postId) {\r\n              return { ...post, likeStatus: newStatus };\r\n            }\r\n            return post;\r\n          });\r\n          setPosts(updatedPosts);\r\n          window.location.reload();\r\n        } else {\r\n          console.error(data.error);\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.error(error);\r\n      });\r\n  };\r\n  \r\n  const handleDislike = (postId, likeStatus) => {\r\n    if (!userId) {\r\n      alert(\"Please log in to dislike posts.\");\r\n      return;\r\n    }\r\n  \r\n    let newStatus;\r\n    if (likeStatus === \"disliked\") {\r\n      newStatus = \"undislike\";\r\n    } else {\r\n      newStatus = \"dislike\";\r\n    }\r\n  \r\n    fetch(`http://localhost:3666/post/${postId}/dislike`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ userId }),\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        if (data.success) {\r\n          const updatedPosts = items.map(post => {\r\n            if (post.id === postId) {\r\n              return { ...post, likeStatus: newStatus };\r\n            }\r\n            return post;\r\n          });\r\n          setPosts(updatedPosts);\r\n          window.location.reload();\r\n        } else {\r\n          console.error(data.error);\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.error(error);\r\n      });\r\n  };\r\n\r\n  const handleBookmark = async (postId, bookmarkedStatus) => {\r\n    if (!userId) {\r\n      alert(\"Please log in to bookmark posts.\");\r\n      return;\r\n    }\r\n  \r\n    const updatedPosts = items.map((post) => {\r\n      if (post._id === postId) {\r\n        return { ...post, bookmarked: bookmarkedStatus };\r\n      }\r\n      return post;\r\n    });\r\n    setPosts(updatedPosts);\r\n  \r\n    try {\r\n      fetch(`http://localhost:3666/post/${postId}/bookmark`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ userId, postId, bookmarked: bookmarkedStatus }),\r\n      })\r\n      window.location.reload();\r\n    } catch (error) {\r\n      console.error(\"Error while toggling bookmark:\", error);\r\n      const revertedPosts = items.map((post) => {\r\n        if (post._id === postId) {\r\n          return { ...post, bookmarked: !bookmarkedStatus };\r\n        }\r\n        return post;\r\n      });\r\n      setPosts(revertedPosts);\r\n    }\r\n  };\r\n\r\n  const handleComment = async (postId) => {\r\n    if (!userId) {\r\n      alert(\"Please log in to comment.\");\r\n      return;\r\n    }\r\n  \r\n    try {\r\n      const response = await fetch(`http://localhost:3666/post/${postId}/comment`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ userId, userName: user.UserName, text: comment, postId }),\r\n      });\r\n  \r\n      const data = await response.json();\r\n  \r\n      if (data.success) {\r\n        const updatedPosts = items.map((post) => {\r\n          if (post._id === postId) { \r\n            const updatedComments = [...post.comments, { userId, userName: user.UserName, text: comment }];\r\n            return { ...post, comments: updatedComments };\r\n          }\r\n          return post;\r\n        });\r\n        setPosts(updatedPosts);\r\n        setComment(\"\");\r\n        window.location.reload();\r\n      } else {\r\n        console.error(data.error);\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (items && items.postImg) {\r\n      const imgUrl = (`http://localhost:3666${items.postImg}`);\r\n      setItemImg(imgUrl);\r\n      console.log(imgUrl)\r\n    }\r\n  }, [items]);\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Nav />\r\n      </div>\r\n\r\n      <div className=\"ContentBox\">\r\n        <div className=\"spacer\"></div>\r\n        <div id=\"gradient\"></div>\r\n          <div className=\"CenteredCard\">\r\n            <div id=\"card\">\r\n            <div className='spacer3'></div>\r\n            <h1>Post Feed</h1>\r\n          </div>\r\n        </div>\r\n        <div className=\"spacer4\"></div>\r\n        {items.map((item) => {\r\n          \r\n          const likeStatus = item.likes.includes(userId) ? \"liked\" : item.dislikes.includes(userId) ? \"disliked\" : null;\r\n          return (\r\n            <div key={item.id} className=\"PostBox\">\r\n                <p className=\"Left\">\r\n                  <strong>\r\n                  {userId === '64de519894f9c85149d2b773' ? (\r\n                      <a href={`/userProfile`}>Quillian Renae</a>\r\n                    ) : (\r\n                      <a href={`/user/64de519894f9c85149d2b773`}>Quillian Renae</a>\r\n                    )}\r\n                  </strong>\r\n                </p>\r\n              <h3 className=\"Left\">{item.postDate}</h3>\r\n              {item.postImg !== \"null\" ? (\r\n                <img className=\"imgSize\" src={`http://localhost:3666${item.postImg}`} alt=\"PostImg\" />\r\n              ) : null}\r\n              <p>{item.postBody}</p>\r\n              {/* <p>Likes: {item.likes.length}</p>\r\n              <p>Dislikes: {item.dislikes.length}</p> */}\r\n              <span>\r\n              {userId && (\r\n                <>\r\n                <span className=\"Icon\" onClick={() => handleLike(item._id, likeStatus)}>\r\n                  {likeStatus === \"liked\" ? <FaThumbsUp color=\"blue\" /> : <FaThumbsUp color=\"gray\" />}\r\n                </span>\r\n                <span>Likes: {item.likes.length}</span>\r\n                <span  className=\"Icon\" onClick={() => handleDislike(item._id, likeStatus)}>\r\n                  {likeStatus === \"disliked\" ? <FaThumbsDown color=\"red\" /> : <FaThumbsDown color=\"gray\" />}\r\n                </span>\r\n                <span>Dislikes: {item.dislikes.length}</span>\r\n              </>\r\n            )}\r\n            {userId && (\r\n              <span className=\"Icon\" onClick={() => handleBookmark(item._id, item.bookmarked)}>\r\n                {item.bookmarked ? <FaBookmark color=\"green\" /> : <FaRegBookmark color=\"gray\" />}\r\n              </span>\r\n              )}\r\n              </span>\r\n                <div className=\"spacer\"></div>\r\n                <span>\r\n                <input type=\"text\" placeholder=\"Write a comment...\" value={comment} onChange={(e) => setComment(e.target.value)} />\r\n                <button onClick={() => handleComment(item._id, user.UserName)} disabled={!userId}>\r\n                  Add Comment\r\n                </button>\r\n                <div className=\"Comments\">\r\n                {commentsMap[item._id] && commentsMap[item._id].length > 0 ? (\r\n                  commentsMap[item._id].map((comment) => (\r\n                    <div key={comment._id} className=\"Comment\">\r\n                      <p className=\"Left\">\r\n                        <strong>\r\n                          {comment.userId === userId ? (\r\n                            <a href={`/userProfile`}>{comment.userName}</a>\r\n                          ) : (\r\n                            <a href={`/user/${comment.userId}`}>{comment.userName}</a>\r\n                          )}\r\n                        </strong>\r\n                        : {comment.text}\r\n                        </p>\r\n                      </div>\r\n                    ))\r\n                    ) : (\r\n                      <p>No comments yet.</p>\r\n                    )}\r\n                  </div>\r\n                </span>\r\n            </div>\r\n          );\r\n        })}\r\n        <div className=\"spacer\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Posts;","C:\\Users\\hjohnston\\OneDrive - Neumont College of Computer Science\\Documents\\GitHub\\WhendigoOccurances\\react-whendigo-app\\src\\Pages\\Collections.js",[],[],"C:\\Users\\hjohnston\\OneDrive - Neumont College of Computer Science\\Documents\\GitHub\\WhendigoOccurances\\react-whendigo-app\\src\\Pages\\Signup.js",[],[],"C:\\Users\\hjohnston\\OneDrive - Neumont College of Computer Science\\Documents\\GitHub\\WhendigoOccurances\\react-whendigo-app\\src\\Pages\\Login.js",[],[],"C:\\Users\\hjohnston\\OneDrive - Neumont College of Computer Science\\Documents\\GitHub\\WhendigoOccurances\\react-whendigo-app\\src\\Pages\\UserProfile.js",["101","102","103"],[],"import React, { useState, useEffect } from 'react';\r\nimport Nav from './Nav';\r\nimport { Link, NavLink } from 'react-router-dom';\r\n\r\n\r\nfunction UserProfile() {\r\n  const [user, setUser] = useState(null);\r\n  const [userImg, setUserImg] = useState(\"\");\r\n  const [notebookText, setNotebookText] = useState('');\r\n  const [items, setItems] = useState([]);\r\n  const [itemImg, setItemImg] = useState(\"\");\r\n  const userId = sessionStorage.getItem('userId');\r\n  const isAdmin = user && user.Key === 'a84640d6-1c42-41aa-a53f-783edd2b4e64'; \r\n  const [allUsers, setAllUsers] = useState([]);\r\n  const [loggedInUserFriendedBy, setLoggedInUserFriendedBy] = useState([]);\r\n  const loggedInUserId = sessionStorage.getItem('userId');\r\n  const [bookmarkDropdownOpen, setBookmarkDropdownOpen] = useState(false);\r\n\r\n\r\n  useEffect(() => {\r\n    console.log('Fetching user data...');\r\n    fetch(`http://localhost:3666/user/${userId}`, {\r\n      method: 'GET',\r\n      credentials: 'include',\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        console.log('User data:', data);\r\n        setUser(data);\r\n        setNotebookText(data.NoteBook || ''); \r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching user data:', error);\r\n      });\r\n  }, [userId]);\r\n\r\n  useEffect(() => {\r\n    if (user && user.Img) {\r\n      setUserImg(`http://localhost:3666${user.Img}`);\r\n    }\r\n  }, [user]);\r\n\r\n\r\n  useEffect(() => {\r\n    console.log('Fetching post data...');\r\n    fetch(\"http://localhost:3666/post\")\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        console.log('Post data:', data);\r\n        setItems(data);\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching post data:', error);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (items && items.postImg) {\r\n      setItemImg(`http://localhost:3666${items.postImg}`);\r\n    }\r\n  }, [items]);\r\n\r\n  const handleNotebookChange = (event) => {\r\n    setNotebookText(event.target.value);\r\n  };\r\n\r\n  const handleSaveNotebook = async () => {\r\n    try {\r\n      const response = await fetch(`http://localhost:3666/user/${userId}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ NoteBook: notebookText }),\r\n      });\r\n      const data = await response.json();\r\n      if (data.success) {\r\n        console.log('Notebook saved successfully');\r\n      } else {\r\n        console.error(data.error);\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchAllUsers = async () => {\r\n      try {\r\n        const response = await fetch(\"http://localhost:3666/users\");\r\n        const usersData = await response.json();\r\n        return usersData; \r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    fetchAllUsers().then(usersData => {\r\n      setAllUsers(usersData);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (loggedInUserId && allUsers && allUsers.length > 0) {\r\n      const friendedBy = [];\r\n      for (const user of allUsers) {\r\n        if (user.Friends.includes(loggedInUserId)) {\r\n          friendedBy.push(user.UserName);\r\n        }\r\n      }\r\n      setLoggedInUserFriendedBy(friendedBy);\r\n    }\r\n  }, [loggedInUserId, allUsers]);\r\n  \r\n  const handleDeletePost = (postId) => {\r\n    if (window.confirm('Are you sure you want to delete this post?')) {\r\n      fetch(`http://localhost:3666/post/delete/${postId}`, {\r\n        method: 'GET',\r\n      })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          console.log('Post deleted successfully:', data);\r\n          setItems(items.filter(item => item._id !== postId));\r\n        })\r\n        .catch(error => {\r\n          console.error('Error deleting post:', error);\r\n        });\r\n    }\r\n  };\r\n\r\n  \r\n  return (\r\n    <div className=''>\r\n      <div>\r\n        <Nav/>\r\n      </div>\r\n      <div className='ContentBox2'>\r\n        {user ? (\r\n          <div>\r\n            <div className='ProfileInfo'>\r\n              <div className='Center'>\r\n              <div id=\"gradient2\"></div>\r\n              <div className='CenteredCard'>\r\n              <div id=\"card2\">\r\n                <img src={userImg} alt=\"Profile\" />\r\n                <h3>{user.UserName}</h3>\r\n                <p>Pronouns: {user.Name}</p>\r\n                <p>Location: {isAdmin ? user.Location : isAdmin}</p>\r\n                <p>Bio: {user.Bio}</p>\r\n                <Link to='/updateUser'>\r\n                    <button>Edit Profile</button>\r\n                  </Link>\r\n                  <div>\r\n                  {loggedInUserFriendedBy.length > 0 && (\r\n                    <div>\r\n                      <h3>Friended By:</h3>\r\n                        {loggedInUserFriendedBy.map((username, index) => {\r\n                          const user = allUsers.find(user => user.UserName === username);\r\n                          if (user) {\r\n                            return (\r\n                              <li key={index}>\r\n                                <Link to={`/user/${user._id}`}>{username}</Link>\r\n                              </li>\r\n                            );\r\n                          } else {\r\n                            return null; \r\n                          }\r\n                        })}\r\n                    </div>\r\n                  )}\r\n                  </div>\r\n                </div>\r\n                </div>\r\n              </div>\r\n              </div>\r\n              <div className='spacer5'></div>\r\n\r\n\r\n            {isAdmin && (\r\n              <div>\r\n                <NavLink to='/create' className={({isActive, isPending}) => isPending ? \"Pending\" : isActive ? \"Active\" : \"\"}>\r\n                        <button>Create</button>\r\n                    </NavLink>\r\n                  <div className='Center2'>\r\n                    <div className='Column'>\r\n                    <div className='spacer'></div>\r\n\r\n                    {items.map((item) => (\r\n                        <div key={item.id} className=\"PostBox2\">\r\n                          <h3 className='Left'>{item.postDate}</h3>\r\n                          {item.postImg !== \"null\" ? (\r\n                            <img className=\"imgSize\" src={`http://localhost:3666${item.postImg}`} alt=\"PostImg\" />\r\n                          ) : null}\r\n                          <p>{item.postBody}</p>\r\n                          <span>Likes: {item.likes.length}</span>\r\n                          <span>Dislikes: {item.dislikes.length}</span>\r\n                          {isAdmin && (\r\n                            <div>\r\n                              <NavLink to={`/update/${item._id}`} className={({isActive, isPending}) => isPending ? \"Pending\" : isActive ? \"Active\" : \"\"}>\r\n                                <button>Update</button>\r\n                              </NavLink>\r\n                              <button onClick={() => handleDeletePost(item._id)}>Delete</button>\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                      ))}\r\n                      </div>\r\n                  </div>\r\n\r\n              </div>\r\n            )}\r\n            {!isAdmin && ( \r\n              <div>\r\n                <textarea\r\n                  value={notebookText}\r\n                  onChange={handleNotebookChange}\r\n                  placeholder=\"Write your notes here...\"\r\n                />\r\n                <button onClick={handleSaveNotebook}>Save Notebook</button>\r\n              </div>\r\n            )}\r\n            {user.NoteBook && ( \r\n              <div>\r\n                <h2>Notebook</h2>\r\n                <p>{user.NoteBook}</p>\r\n              </div>\r\n            )}\r\n          </div>\r\n        ) : (\r\n          <p>Loading user data...</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserProfile;","C:\\Users\\hjohnston\\OneDrive - Neumont College of Computer Science\\Documents\\GitHub\\WhendigoOccurances\\react-whendigo-app\\src\\Pages\\UserDisplay.js",["104"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Nav from \"./Nav\";\r\n\r\nconst UserDisplay = () => {\r\n  const { id } = useParams();\r\n  const [user, setUser] = useState(null);\r\n  const [userImg, setUserImg] = useState(\"\");\r\n  const userId = sessionStorage.getItem('userId');\r\n  const [isFriend, setIsFriend] = useState(false);\r\n  const [notebookText, setNotebookText] = useState('');\r\n  const [posts, setPosts] = useState([]);\r\n  const [itemImg, setItemImg] = useState(\"\");\r\n  const adminKey = 'a84640d6-1c42-41aa-a53f-783edd2b4e64';\r\n  \r\n\r\n  useEffect(() => {\r\n    const fetchUser = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:3666/user/${id}`);\r\n        const userData = await response.json();\r\n        setUser(userData);\r\n        setNotebookText(userData.NoteBook || '');\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    \r\n    const fetchFriendStatus = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:3666/user/${userId}/friends/${id}`);\r\n        const friendData = await response.json();\r\n        setIsFriend(friendData.isFriend);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    const fetchPosts = async () => {\r\n        try {\r\n          const response = await fetch(`http://localhost:3666/post`);\r\n          const postData = await response.json();\r\n          setPosts(postData);\r\n        } catch (error) {\r\n          console.error(error);\r\n        }\r\n      };\r\n\r\n  \r\n      fetchUser();\r\n      if (user && user.Key === adminKey) {\r\n        fetchPosts();\r\n      }\r\n      if (userId) {\r\n        fetchFriendStatus();\r\n      }\r\n    }, [id, userId, user, adminKey]);\r\n\r\n    const handleFriendship = () => {\r\n      fetch(`http://localhost:3666/user/${userId}/friends/${id}`, {\r\n        method: \"POST\",\r\n      })\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          if (data.success) {\r\n            setIsFriend(true);\r\n          } else {\r\n            console.error(data.error);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.error(error);\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n      if (user && user.Img) {\r\n        setUserImg(`http://localhost:3666${user.Img}`);\r\n      }\r\n    }, [user]);\r\n  \r\n    useEffect(() => {\r\n      if (posts && posts.postImg) {\r\n        setItemImg(`http://localhost:3666${posts.postImg}`);\r\n      }\r\n    }, [posts]);\r\n\r\n  if (!user) {\r\n    return <p>Loading...</p>;\r\n  }\r\n\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Nav />\r\n      </div>\r\n      <div className='ContentBox2'>\r\n        <div className=\"spacer2\"></div>\r\n        <div id=\"gradient\"></div>\r\n          <div className='CenteredCard'>\r\n            <div id=\"card2\">\r\n            <img className='ImgSize2' src={userImg} alt=\"Profile\" />\r\n            <h3> \r\n              <strong>\r\n                {user.UserName}\r\n              </strong>\r\n            </h3>\r\n            <p>Pronouns: {user.Name}</p>\r\n            {user.Key === adminKey && <p>Location: {user.Location}</p>}\r\n            <p>Bio: {user.Bio}</p>\r\n            {userId && userId !== id && !isFriend && (\r\n                <button onClick={handleFriendship}>Add Friend</button>\r\n            )}\r\n              {isFriend && user.NoteBook && ( \r\n                  <div>\r\n                  <h3>Notebook:</h3>\r\n                  <p>{notebookText}</p>\r\n                  </div>\r\n              )}\r\n\r\n            {user.Key === adminKey && (\r\n            <div className=\"PostBox\">\r\n              <h3>Posts</h3>\r\n              {posts.map((post) => (\r\n                <div key={post._id} className=\"PostBox\">\r\n                  <h3>{post.postDate}</h3>\r\n                  {post.postImg !== \"null\" ? (\r\n                      <img className=\"imgSize\" src={`http://localhost:3666${post.postImg}`} alt=\"PostImg\" />\r\n                  ) : null}\r\n                  <p>{post.postBody}</p>\r\n                </div>\r\n              ))}\r\n            </div>        \r\n          )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default UserDisplay;","C:\\Users\\hjohnston\\OneDrive - Neumont College of Computer Science\\Documents\\GitHub\\WhendigoOccurances\\react-whendigo-app\\src\\CRUD\\UpdateUser.js",[],[],"C:\\Users\\hjohnston\\OneDrive - Neumont College of Computer Science\\Documents\\GitHub\\WhendigoOccurances\\react-whendigo-app\\src\\CRUD\\Delete.js",[],[],"C:\\Users\\hjohnston\\OneDrive - Neumont College of Computer Science\\Documents\\GitHub\\WhendigoOccurances\\react-whendigo-app\\src\\CRUD\\Update.js",[],[],"C:\\Users\\hjohnston\\OneDrive - Neumont College of Computer Science\\Documents\\GitHub\\WhendigoOccurances\\react-whendigo-app\\src\\CRUD\\Create.js",[],[],"C:\\Users\\hjohnston\\OneDrive - Neumont College of Computer Science\\Documents\\GitHub\\WhendigoOccurances\\react-whendigo-app\\src\\ErrorPages\\Error.js",[],[],"C:\\Users\\hjohnston\\OneDrive - Neumont College of Computer Science\\Documents\\GitHub\\WhendigoOccurances\\react-whendigo-app\\src\\Souls\\CookieClicker.js",["105"],[],"import {React, useEffect} from 'react'\r\nimport Nav from '../Pages/Nav'\r\n\r\nconst CookieClicker = () => {\r\n    useEffect(() => {\r\n        require('./Clicker.css');\r\n      })\r\n\r\n  return (\r\n    <div>\r\n      <div className='ContentBox'>\r\n        <p>ContentBox</p>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CookieClicker","C:\\Users\\hjohnston\\OneDrive - Neumont College of Computer Science\\Documents\\GitHub\\WhendigoOccurances\\react-whendigo-app\\src\\ErrorPage\\Error2.js",["106"],[],"import {React, useEffect} from 'react';\r\n\r\nconst Error2 = () => {\r\n\r\n  useEffect(() => {\r\n    require('./DistoredError.css');\r\n  })\r\n\r\n  return (\r\n        <div className='TV' >\r\n        <img className=\"TVsize\" src={process.env.PUBLIC_URL + './ErrorTV.gif'}></img>\r\n      </div>\r\n\r\n  );\r\n};\r\n\r\n\r\nexport default Error2;","C:\\Users\\hjohnston\\OneDrive - Neumont College of Computer Science\\Documents\\GitHub\\WhendigoOccurances\\react-whendigo-app\\src\\Pages\\Nav.js",[],[],{"ruleId":"107","severity":1,"message":"108","line":5,"column":47,"nodeType":"109","messageId":"110","endLine":5,"endColumn":56},{"ruleId":"111","severity":1,"message":"112","line":14,"column":15,"nodeType":"113","endLine":14,"endColumn":91},{"ruleId":"111","severity":1,"message":"112","line":47,"column":37,"nodeType":"113","endLine":47,"endColumn":105},{"ruleId":"114","severity":1,"message":"115","line":67,"column":32,"nodeType":"113","endLine":67,"endColumn":72},{"ruleId":"114","severity":1,"message":"115","line":68,"column":32,"nodeType":"113","endLine":68,"endColumn":72},{"ruleId":"114","severity":1,"message":"115","line":69,"column":32,"nodeType":"113","endLine":69,"endColumn":72},{"ruleId":"107","severity":1,"message":"116","line":7,"column":10,"nodeType":"109","messageId":"110","endLine":7,"endColumn":17},{"ruleId":"107","severity":1,"message":"116","line":11,"column":10,"nodeType":"109","messageId":"110","endLine":11,"endColumn":17},{"ruleId":"107","severity":1,"message":"117","line":17,"column":10,"nodeType":"109","messageId":"110","endLine":17,"endColumn":30},{"ruleId":"107","severity":1,"message":"118","line":17,"column":32,"nodeType":"109","messageId":"110","endLine":17,"endColumn":55},{"ruleId":"107","severity":1,"message":"116","line":13,"column":10,"nodeType":"109","messageId":"110","endLine":13,"endColumn":17},{"ruleId":"107","severity":1,"message":"119","line":2,"column":8,"nodeType":"109","messageId":"110","endLine":2,"endColumn":11},{"ruleId":"111","severity":1,"message":"112","line":11,"column":9,"nodeType":"113","endLine":11,"endColumn":80},"no-unused-vars","'useRoutes' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'itemImg' is assigned a value but never used.","'bookmarkDropdownOpen' is assigned a value but never used.","'setBookmarkDropdownOpen' is assigned a value but never used.","'Nav' is defined but never used."]